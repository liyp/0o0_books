{"author.name":"","couchdb.exportPreferences":"{}","file.H1R4QOFHSkFNQnAK8RNjGClo.content":"十月\n=======\n\n## 14\n电脑坏了大半天。\n\n## 15\n\n### cloud-app\n\n阅读 cloud-appconnector 源码。\nAppService <del>的不同实现，比较性能的不同</del>\n\n- Spring DAO 访问数据库\n- Dubbo app->cloud方向，dispatcher调用\n- Netty 与app的双向通信\n- Socket cloud->app的通信方向\n\n<del>*结论还不知道？*</del>\nAppServices 的各种服务。\n\n### Thrift Vs RESTful\n\n* Thrift 可伸缩跨语言服务框架\n* [RESTful][ws-restful]\n> * 显式地使用 HTTP 方法。\n  * 无状态。\n  * 公开目录结构式的 URI。\n  * 传输 XML、JavaScript Object Notation (JSON)，或同时传输这两者。\n* [SOAP]\n\n[soap]: http://zh.wikipedia.org/zh-cn/SOAP\n[ws-restful]: http://www.ibm.com/developerworks/cn/webservices/ws-restful/\n\n## 16\n\n没有什么驱动力，学习效率很低，且都是在看没有动手去做，显得很难深入理解！\n\n### 困境！\n\n经常感到自己在虚度时光，日复一日，恍恍惚惚。感觉身处**困境**！\n* 如何循序渐进的学习系统知识？\n* 如何合理利用日常时间？\n\n这可能是现阶段最需要思考的问题了。\n\n### Dubbo\n\n[Dubbo]是一个分布式服务框架，致力于提供高性能和透明化的RPC远程服务调用方案，以及SOA服务治理方案。\n\n其核心部分包含:\n* 远程通讯: 提供对多种基于长连接的NIO框架抽象封装，包括多种线程模型，序列化，以及“请求-响应”模式的信息交换方式。\n* 集群容错: 提供基于接口方法的透明远程过程调用，包括多协议支持，以及软负载均衡，失败容错，地址路由，动态配置等集群支持。\n* 自动发现: 基于注册中心目录服务，使服务消费方能动态的查找服务提供方，使地址透明，使服务提供方可以平滑增加或减少机器。\n\nDubbo能做什么？\n* 透明化的远程方法调用，就像调用本地方法一样调用远程方法，只需简单配置，没有任何API侵入。\n* 软负载均衡及容错机制，可在内网替代F5等硬件负载均衡器，降低成本，减少单点。\n* 服务自动注册与发现，不再需要写死服务提供方地址，注册中心基于接口名查询服务提供者的IP地址，并且能够平滑添加或删除服务提供者。\n\n\n[dubbo]: http://alibaba.github.io/dubbo-doc-static/Home-zh.htm\n[dubbo-architecture]: http://shiyanjun.cn/archives/325.html\n\n## 17\n\n### 程序编译执行原理\n\n今天听他们探讨程序语言，说到 Python 与 C++/Java 性能比较，Dictionary 的 Python 语言底层实现的优化性能要好于 C++ STL 的 map，\n又说到 Python 自身的一些语言优势以及 CPython 解释器的底层 C 实现带来的崇拜光环。\n\n对于这些一毛不知的我分外好奇，由此想从程序语言的编译执行过程原理的角度来解惑！就一个程序的执行的来龙去脉的过程的探究。\n\n<!--- TODO: 程序执行过程-编译，链接，装载，执行 --->\n\n### Netty\n\n[Netty]提供异步的、事件驱动的网络应用程序框架和工具，用以快速开发高性能、高可靠性的网络服务器和客户端程序。\n\n* Netty NIO 框架\n* 源码级实现原理\n\n<!--- TODO --->\n\n[netty]: http://netty.io/3.8/guide/#preface.3\n\n## 20\n\n### appconnector\n\nAPP Push API 中的 pushEven:newApp|newPureMessage 的实现\n\n## 22\n\n### push了解\n\n透传，即是透明传送，也就是传送网络不管传输的业务如何，只负责将需要传送的业务传送到目的节点，\n同时保证传输的质量即可，而不对传输的业务进行处理。\n\n## 24\n\n### ip-location中BMap的标记容量上线\n\nBMap所能展示的标记是有限的，我把所有坐标存在一个`array[]`里，长度超过1W+便出现js脚本无响应。\n所以，地图上标记过多而无法正常显示。尚未找到合适的解决方案。\n\n<!---TODO: ip-location 地图标签过多无法显示的问题--->\n\n### EasyMock\n\n学习使用单元测试工具，[EasyMock]\n\n> 通过 EasyMock，我们可以为指定的接口动态的创建 Mock 对象，并利用 Mock 对象来模拟协同模块或是领域对象，从而使单元测试顺利进行。这个过程大致可以划分为以下几个步骤：\n  * 使用 EasyMock 生成 Mock 对象；\n  * 设定 Mock 对象的预期行为和输出；\n  * 将 Mock 对象切换到 Replay 状态；\n  * 调用 Mock 对象方法进行单元测试；\n  * 对 Mock 对象的行为进行验证。\n\n```java\npublic class SalesOrderTestCase extends TestCase {\n  public void testSalesOrder() {\n    IMocksControl control = EasyMock.createControl();\n    //......\n    ResultSet mockResultSet = control.createMock(ResultSet.class);\n    try {\n      //......\n      mockResultSet.next();\n      expectLastCall().andReturn(true).times(3);\n      expectLastCall().andReturn(false).times(1);\n      mockResultSet.getString(1);\n      expectLastCall().andReturn(\"DEMO_ORDER_001\").times(1);\n      expectLastCall().andReturn(\"DEMO_ORDER_002\").times(1);\n      expectLastCall().andReturn(\"DEMO_ORDER_003\").times(1);\n      mockResultSet.getString(2);\n      expectLastCall().andReturn(\"Asia Pacific\").times(1);\n      expectLastCall().andReturn(\"Europe\").times(1);\n      expectLastCall().andReturn(\"America\").times(1);\n      mockResultSet.getDouble(3);\n      expectLastCall().andReturn(350.0).times(1);\n      expectLastCall().andReturn(1350.0).times(1);\n      expectLastCall().andReturn(5350.0).times(1);\n      control.replay();\n      //......\n      int i = 0;\n      String[] priceLevels = { \"Level_A\", \"Level_C\", \"Level_E\" };\n      while (mockResultSet.next()) {\n        SalesOrder order = new SalesOrderImpl();\n        order.loadDataFromDB(mockResultSet);\n        assertEquals(order.getPriceLevel(), priceLevels[i]);\n        i++;\n      }\n      control.verify();\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }\n}\n```\n\n[easymock]: http://www.ibm.com/developerworks/cn/opensource/os-cn-easymock/\n\n\n## 27\n\n### 阻塞/非阻塞、同步/异步、IO模型\n\n[概念辨析][bio-nio-sync-async]\n\n\n[bio-nio-sync-async]: http://blog.csdn.net/hguisu/article/details/7453390\n\n\n### CountDownLatch 同步辅助类\n\nCountDownLatch是一个同步辅助类，犹如倒计时计数器，创建对象时通过构造方法设置初始值，\n调用CountDownLatch对象的await()方法则处于等待状态，调用countDown()方法就将计数器减1，\n当计数到达0时，则所有等待者或单个等待者开始执行。\n\n```java\npackage com.thread;\nimport java.util.concurrent.CountDownLatch;\nimport java.util.concurrent.CyclicBarrier;\nimport java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\n/**\n *\n * @author Administrator\n *该程序用来模拟发送命令与执行命令，主线程代表指挥官，新建3个线程代表战士，战士一直等待着指挥官下达命令，\n *若指挥官没有下达命令，则战士们都必须等待。一旦命令下达，战士们都去执行自己的任务，指挥官处于等待状态，战士们任务执行完毕则报告给\n *指挥官，指挥官则结束等待。\n */\npublic class CountdownLatchTest {\n\n    public static void main(String[] args) {\n        ExecutorService service = Executors.newCachedThreadPool(); //创建一个线程池\n        final CountDownLatch cdOrder = new CountDownLatch(1);//指挥官的命令，设置为1，指挥官一下达命令，则cutDown,变为0，战士们执行任务\n        final CountDownLatch cdAnswer = new CountDownLatch(3);//因为有三个战士，所以初始值为3，每一个战士执行任务完毕则cutDown一次，当三个都执行完毕，变为0，则指挥官停止等待。\n        for(int i=0;i<3;i++){\n            Runnable runnable = new Runnable(){\n                    public void run(){\n                    try {\n                        System.out.println(\"线程\" + Thread.currentThread().getName() +\n                                \"正准备接受命令\");\n                        cdOrder.await(); //战士们都处于等待命令状态\n                        System.out.println(\"线程\" + Thread.currentThread().getName() +\n                        \"已接受命令\");\n                        Thread.sleep((long)(Math.random()*10000));\n                        System.out.println(\"线程\" + Thread.currentThread().getName() +\n                                \"回应命令处理结果\");\n                        cdAnswer.countDown(); //任务执行完毕，返回给指挥官，cdAnswer减1。\n                    } catch (Exception e) {\n                        e.printStackTrace();\n                    }\n                }\n            };\n            service.execute(runnable);//为线程池添加任务\n        }\n        try {\n            Thread.sleep((long)(Math.random()*10000));\n\n            System.out.println(\"线程\" + Thread.currentThread().getName() +\n                    \"即将发布命令\");\n            cdOrder.countDown(); //发送命令，cdOrder减1，处于等待的战士们停止等待转去执行任务。\n            System.out.println(\"线程\" + Thread.currentThread().getName() +\n            \"已发送命令，正在等待结果\");\n            cdAnswer.await(); //命令发送后指挥官处于等待状态，一旦cdAnswer为0时停止等待继续往下执行\n            System.out.println(\"线程\" + Thread.currentThread().getName() +\n            \"已收到所有响应结果\");\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        service.shutdown(); //任务结束，停止线程池的所有线程\n\n    }\n}\n/* result\n线程pool-1-thread-2正准备接受命令\n线程pool-1-thread-3正准备接受命令\n线程pool-1-thread-1正准备接受命令\n线程main即将发布命令\n线程pool-1-thread-2已接受命令\n线程pool-1-thread-3已接受命令\n线程pool-1-thread-1已接受命令\n线程main已发送命令，正在等待结果\n线程pool-1-thread-2回应命令处理结果\n线程pool-1-thread-1回应命令处理结果\n线程pool-1-thread-3回应命令处理结果\n线程main已收到所有响应结果\n */\n```\n","file.H1R4QOFHSkFNQnAK8RNjGClo.editorEnd":"131","file.H1R4QOFHSkFNQnAK8RNjGClo.editorScrollTop":"6982","file.H1R4QOFHSkFNQnAK8RNjGClo.editorStart":"131","file.H1R4QOFHSkFNQnAK8RNjGClo.previewScrollTop":"6551","file.H1R4QOFHSkFNQnAK8RNjGClo.publish":";","file.H1R4QOFHSkFNQnAK8RNjGClo.selectTime":"1427870496122","file.H1R4QOFHSkFNQnAK8RNjGClo.sync":";","file.H1R4QOFHSkFNQnAK8RNjGClo.title":"2014-10","file.MMuf27Bgg7PqqolMLntpH7BF.content":"# APNS\n\n## apns Payload\n\n- [APNS推送通知消息负载内容和本地格式字符串](http://www.cnblogs.com/taintain1984/p/3727440.html)\n\n\n\n## 开源学习\n\n- [java-apns](https://github.com/notnoop/java-apns) 一个国外人的项目，目前仍在不断更新\n- [dbay-apns-for-java](https://github.com/RamosLi/dbay-apns-for-java) 国人的一个基于`java-apns`的一个项目\n\n## 合\n\n* IOS 如何推送到指定用户设备上？\n\n\n\n{\\\"aps\\\": {\\\"alert\\\":{\\\"title\\\":\\\"Game\\ Request\\\",\\\"body\\\":\\\"Bob\\ wants\\ to\\ play\\ poker\\\",\\\"action-loc-key\\\":\\\"PLAY\\\"},\\\"badge\\\":5,},\\\"acme1\\\":\\\"bar\\\",\\\"acme2\\\":[\\\"bang\\\",\\\"whiz\\\"]}\n\n{\\\"aps\\\":{\\\"alert\\\":{\\\"title\\\":\\\"Game-Request\\\",\\\"body\\\":\\\"Bob-wants-to-play-poker\\\",\\\"action-loc-key\\\":\\\"PLAY\\\"},\\\"badge\\\":5},\\\"acme1\\\":\\\"bar\\\",\\\"acme2\\\":[\\\"bang\\\",\\\"whiz\\\"]}\n\n{\\\"aps\\\":{\\\"alert\\\":{\\\"title\\\":\\\"Game-Request\\\",\\\"body\\\":\\\"Bob-wants-to-play\\ poker\\\"}}}","file.MMuf27Bgg7PqqolMLntpH7BF.editorEnd":"306","file.MMuf27Bgg7PqqolMLntpH7BF.editorScrollTop":"291","file.MMuf27Bgg7PqqolMLntpH7BF.editorStart":"306","file.MMuf27Bgg7PqqolMLntpH7BF.previewScrollTop":"400","file.MMuf27Bgg7PqqolMLntpH7BF.publish":";","file.MMuf27Bgg7PqqolMLntpH7BF.selectTime":"1428651614915","file.MMuf27Bgg7PqqolMLntpH7BF.sync":";","file.MMuf27Bgg7PqqolMLntpH7BF.title":"APNS","file.QlzvpqBX8GNbyYjeP8RraeCt.content":"# 任务调度方法\n\nREF: [几种任务调度的 Java 实现方法与比较](http://www.oschina.net/question/129540_28053)\n\n*  Timer\n* ScheduledExecutor\n* 开源工具包 Quartz\n* 开源工具包 JCronTab\n\nTODO\n\n\n","file.QlzvpqBX8GNbyYjeP8RraeCt.editorEnd":"152","file.QlzvpqBX8GNbyYjeP8RraeCt.editorScrollTop":"0","file.QlzvpqBX8GNbyYjeP8RraeCt.editorStart":"152","file.QlzvpqBX8GNbyYjeP8RraeCt.previewScrollTop":"0","file.QlzvpqBX8GNbyYjeP8RraeCt.publish":";","file.QlzvpqBX8GNbyYjeP8RraeCt.selectTime":"1427870372621","file.QlzvpqBX8GNbyYjeP8RraeCt.sync":";","file.QlzvpqBX8GNbyYjeP8RraeCt.title":"ScheduledExecutor","file.StACXbjkl5yGNyeGVp9xMFZ2.content":"Push Notification Service\n=============\n\n\n## 推送实现\n\n* 使用GCM服务\n  * C2DM/GCM (Google Cloud Messaging)\n* 使用XMPP协议\n  * Openfire + Spark + Smack\n  * [androidpn](http://sourceforge.net/projects/androidpn/)\n* 使用MQTT协议（MQTT: Message Queuing Telemetry Transport）\n  * Really Small Message Broker (RSMB) 一个简单的MQTT代理\n* 使用HTTP轮循方式\n\nREF\n* [Android实现推送方式解决方案](http://www.cnblogs.com/hanyonglu/archive/2012/03/04/2378971.html)\n\n## 调研目前现存的PNS\n\n* [Amazon Simple Notification Service](http://docs.aws.amazon.com/zh_cn/sns/latest/dg/welcome.html)\n*\n\n\n### Amazon SNS\n\nAmazon Simple Notification Service (Amazon SNS) 是一项 Web 服务，用于协调和管理向订阅终端节点或客户交付或发送消息的过程。 在 Amazon SNS 中有两种类型的客户端：发布者和订阅者，也称为生产者和消费者。发布者通过创建消息并将消息发送至主题与订阅者进行异步交流，主题是一个逻辑访问点和通信渠道。订阅者（即 Web 服务器、电子邮件地址、Amazon SQS 队列）在其订阅主题后通过受支持协议（即 Amazon SQS、HTTP/S、电子邮件、SMS）中的一种使用或接收消息或通知。\n\n![](http://docs.aws.amazon.com/zh_cn/sns/latest/dg/images/sns-how-works.png)\n\n使用 Amazon SNS 时，您（作为所有者）可通过定义确定哪些发布者和订阅者能就主题进行交流的策略来创建主题和控制对主题的访问权。发布者会发送消息至他们创建的主题或他们有权发布的主题。发布者可用发送消息至主题来代替在每个消息中包括特定目标地址。Amazon SNS 使主题与订阅了该主题的一列订阅者相匹配，并将消息发送给这些订阅者中的每一个。每个主题都有一个独特的名称，用户为发布者识别 Amazon SNS 终端节点，从而发布消息和订阅者以注册通知。订阅者接收所有发布至他们所订阅主题的消息，且一个主题的所有订阅者收到的消息都相同。\n\n![](http://docs.aws.amazon.com/zh_cn/sns/latest/dg/images/sns-mobile-subscribe.png)\n\n\n### Baidu PNS\n\n### APNS\n\niOS应用则会在被切换到后台一段时间后停止运行，这时候如果想要达到信息的获取则只能依靠APNS（Apple Push Notification Service），由服务器主动进行推送。\n\n由于APNS最高只支持256个字节的消息体，并且推送消息中大量重复的内容也会造成流量成本，这时可以使用本地化字符串。本地化字符串是在客户端中的Localizable.strings文件中定义一对键值对，服务器只需要提供指定字符串的键和动态生成的参数即可生成一条完整的推送消息。\n\n并不是每条消息都绝对会推送成功。例如当用户卸载掉该应用时，所对应的token就已经失效了，这时可以通过service（java-apns）的getInactiveDevices方法获得失效的token并作出处理。\n\n#### 开发流程\n\n[APNS远程推送证书的申请和制作——详细解析](http://my.oschina.net/u/1245365/blog/297913#OSC_h1_3)\n\n所需证书申请：\n1. 申请本地证书  **CSR**\n2. 在开发者网站上申请证书 **Apple Push Notifications service SSL Certificates**\n3. 申请描述文件（开发和发布描述文件） **.CER**\n4. 为服务器制作证书 **.pem + 密码**\n  * .p12  `openssl x509 -in 证书名字.cer -inform der -out push_developer_cer.pem`\n  * pushKey.pem `openssl pkcs12 -nocerts -out pushKey.pem -in p12名字.p12`\n  * 最终.pem `cat 下载证书生成的.pem p12生成的.pem > 最终证书的名字.pem`\n5. 测试证书是否有效\n  * developer `openssl s_client -connect gateway.sandbox.push.apple.com:2195 -cert 下载证书生成的.pem -key p12生成的.pem`\n  * production `openssl s_client -connect gateway.push.apple.com:2195 -cert 下载证书生成的.pem -key p12生成的.pem`\n\n### GCM\n\n### JDPushService\n\n\n\n## 第三方包分析\n\nAPNS 接入\n  * [java-apns](https://github.com/notnoop/java-apns)\n  * [dbay-apns](https://github.com/RamosLi/dbay-apns-for-java) 作者在分析java-apns后写出的\n\nXMPP\n  * [androidpn](http://sourceforge.net/projects/androidpn/)\n\nMQTT\n  * moquette\n  * paho.mqtt.java\n\n\n### androidpn\n\n基于**XMPP**协议。\n\n[源码分析](http://www.riaos.com/ria/10559)\n\n- Server部分结构\n\n|package | introduction |\n|---|---|\n|`org.androidpn.server.dao`,<br/>`org.androidpn.server.model`,<br/>`org.androidpn.server.service`|使用hibernate链接数据库并实现简单的用户登录认证，开发中可以用我们自己的认证模块替换。\n|`org.androidpn.server.util`|包中的类用来加载resources中的配置文件，在配置文件中可指定监听端口和ssl证书目录等属性。|\n|`org.androidpn.server.xmpp`|包里面定义了一些异常类型，主要是包含有入口类XmppServer，这个类用来启动和停止server程序。|\n|`org.androidpn.server.xmpp.auth`|包里面是认证的一些类，我们自己的认证模块可以在这里与androidpn进行结合。\n|`org.androidpn.server.xmpp.codec`|是XMPP协议的XML文件解析包，server收到和发送的消息都要通过这个包来进行xmpp协议编码和解码。\n|`org.androidpn.server.xmpp.handler`|包主要是对消息的处理，我们可以针对不同的消息类型定义自己的handler，\n|`org.androidpn.server.xmpp.net`|包负责维护与client之间的持久连接，并实现了一些传输方式供发送xmpp消息时使用。\n|`org.androidpn.server.xmpp.presence`|里面只包含PresenceManager类，用来维护client的在线状态。\n|`org.androidpn.server.xmpp.push`|包里面的NotificationManager类包含有向client发送消息的接口。\n|`org.androidpn.server.xmpp.router`|包负责将收到的信息包发送到相应的handler进行处理，是一个路由包。\n|`org.androidpn.server.xmpp.session`|包定义了用来表示持久链接的session，每个session包含一条连接的状态信息。\n|`org.androidpn.server.xmpp.ssl`|是对连接进行ssl认证的工具包。\n\n### moquette\n\n[MQTT协议之moquette 安装使用](http://blog.csdn.net/zhu_tianwei/article/details/42983867)\n\n### APNS\n\njava-apns\n\n### GCM\n\nref\n  - http://www.cnblogs.com/zhwl/p/3370426.html\n  - http://www.cnblogs.com/tamer/archive/2012/06/28/2568739.html\n  - https://github.com/avram\n\n1. 注册得到 **API key**\n  1. [google apis console](https://code.google.com/apis/console) 创建项目\n  2. 打开GCM服务\n  3. 获取一个API key\n    - project id: 714418754597 (GMsender ID)\n    - api key: AIzaSyDG6dNQV6jkOuNFJ0ke6mxNp0bfAib_dk0\n\n2. 服务端\n  - 下载 [google engine sdk](https://cloud.google.com/appengine/downloads?hl=zh-CN#Google_App_Engine_SDK_for_Java)\n  - 服务端代码\n\n3. Android端\n\n\n\n## 消息队列 MQ\n\n* [taobao mq](http://jm-blog.aliapp.com/?p=3483)\n  * notify\n  * MetaQ\n* Kafka\n* JeroMQ (ZMQ)\n\n## TODO\n\n* 消息队列\n* publish/subscribe model\n\t* redis RMQ\n\t* JMS\n* GCM & APNS\n","file.StACXbjkl5yGNyeGVp9xMFZ2.discussionList":"{}","file.StACXbjkl5yGNyeGVp9xMFZ2.editorEnd":"25","file.StACXbjkl5yGNyeGVp9xMFZ2.editorScrollTop":"3716","file.StACXbjkl5yGNyeGVp9xMFZ2.editorStart":"25","file.StACXbjkl5yGNyeGVp9xMFZ2.previewScrollTop":"4306","file.StACXbjkl5yGNyeGVp9xMFZ2.publish":";","file.StACXbjkl5yGNyeGVp9xMFZ2.selectTime":"1428651710832","file.StACXbjkl5yGNyeGVp9xMFZ2.sync":";","file.StACXbjkl5yGNyeGVp9xMFZ2.title":"Push Notification Service","file.TO6PG4kQAXkj14SkLXYQikz8.content":"Welcome to StackEdit!\n===================\n\n\nHey! I'm your first Markdown document in **StackEdit**[^stackedit]. Don't delete me, I'm very helpful! I can be recovered anyway in the **Utils** tab of the <i class=\"icon-cog\"></i> **Settings** dialog.\n\n----------\n\n\nDocuments\n-------------\n\nStackEdit stores your documents in your browser, which means all your documents are automatically saved locally and are accessible **offline!**\n\n> **Note:**\n\n> - StackEdit is accessible offline after the application has been loaded for the first time.\n> - Your local documents are not shared between different browsers or computers.\n> - Clearing your browser's data may **delete all your local documents!** Make sure your documents are synchronized with **Google Drive** or **Dropbox** (check out the [<i class=\"icon-refresh\"></i> Synchronization](#synchronization) section).\n\n#### <i class=\"icon-file\"></i> Create a document\n\nThe document panel is accessible using the <i class=\"icon-folder-open\"></i> button in the navigation bar. You can create a new document by clicking <i class=\"icon-file\"></i> **New document** in the document panel.\n\n#### <i class=\"icon-folder-open\"></i> Switch to another document\n\nAll your local documents are listed in the document panel. You can switch from one to another by clicking a document in the list or you can toggle documents using <kbd>Ctrl+[</kbd> and <kbd>Ctrl+]</kbd>.\n\n#### <i class=\"icon-pencil\"></i> Rename a document\n\nYou can rename the current document by clicking the document title in the navigation bar.\n\n#### <i class=\"icon-trash\"></i> Delete a document\n\nYou can delete the current document by clicking <i class=\"icon-trash\"></i> **Delete document** in the document panel.\n\n#### <i class=\"icon-hdd\"></i> Export a document\n\nYou can save the current document to a file by clicking <i class=\"icon-hdd\"></i> **Export to disk** from the <i class=\"icon-provider-stackedit\"></i> menu panel.\n\n> **Tip:** Check out the [<i class=\"icon-upload\"></i> Publish a document](#publish-a-document) section for a description of the different output formats.\n\n\n----------\n\n\nSynchronization\n-------------------\n\nStackEdit can be combined with <i class=\"icon-provider-gdrive\"></i> **Google Drive** and <i class=\"icon-provider-dropbox\"></i> **Dropbox** to have your documents saved in the *Cloud*. The synchronization mechanism takes care of uploading your modifications or downloading the latest version of your documents.\n\n> **Note:**\n\n> - Full access to **Google Drive** or **Dropbox** is required to be able to import any document in StackEdit. Permission restrictions can be configured in the settings.\n> - Imported documents are downloaded in your browser and are not transmitted to a server.\n> - If you experience problems saving your documents on Google Drive, check and optionally disable browser extensions, such as Disconnect.\n\n#### <i class=\"icon-refresh\"></i> Open a document\n\nYou can open a document from <i class=\"icon-provider-gdrive\"></i> **Google Drive** or the <i class=\"icon-provider-dropbox\"></i> **Dropbox** by opening the <i class=\"icon-refresh\"></i> **Synchronize** sub-menu and by clicking **Open from...**. Once opened, any modification in your document will be automatically synchronized with the file in your **Google Drive** / **Dropbox** account.\n\n#### <i class=\"icon-refresh\"></i> Save a document\n\nYou can save any document by opening the <i class=\"icon-refresh\"></i> **Synchronize** sub-menu and by clicking **Save on...**. Even if your document is already synchronized with **Google Drive** or **Dropbox**, you can export it to a another location. StackEdit can synchronize one document with multiple locations and accounts.\n\n#### <i class=\"icon-refresh\"></i> Synchronize a document\n\nOnce your document is linked to a <i class=\"icon-provider-gdrive\"></i> **Google Drive** or a <i class=\"icon-provider-dropbox\"></i> **Dropbox** file, StackEdit will periodically (every 3 minutes) synchronize it by downloading/uploading any modification. A merge will be performed if necessary and conflicts will be detected.\n\nIf you just have modified your document and you want to force the synchronization, click the <i class=\"icon-refresh\"></i> button in the navigation bar.\n\n> **Note:** The <i class=\"icon-refresh\"></i> button is disabled when you have no document to synchronize.\n\n#### <i class=\"icon-refresh\"></i> Manage document synchronization\n\nSince one document can be synchronized with multiple locations, you can list and manage synchronized locations by clicking <i class=\"icon-refresh\"></i> **Manage synchronization** in the <i class=\"icon-refresh\"></i> **Synchronize** sub-menu. This will let you remove synchronization locations that are associated to your document.\n\n> **Note:** If you delete the file from **Google Drive** or from **Dropbox**, the document will no longer be synchronized with that location.\n\n----------\n\n\nPublication\n-------------\n\nOnce you are happy with your document, you can publish it on different websites directly from StackEdit. As for now, StackEdit can publish on **Blogger**, **Dropbox**, **Gist**, **GitHub**, **Google Drive**, **Tumblr**, **WordPress** and on any SSH server.\n\n#### <i class=\"icon-upload\"></i> Publish a document\n\nYou can publish your document by opening the <i class=\"icon-upload\"></i> **Publish** sub-menu and by choosing a website. In the dialog box, you can choose the publication format:\n\n- Markdown, to publish the Markdown text on a website that can interpret it (**GitHub** for instance),\n- HTML, to publish the document converted into HTML (on a blog for example),\n- Template, to have a full control of the output.\n\n> **Note:** The default template is a simple webpage wrapping your document in HTML format. You can customize it in the **Advanced** tab of the <i class=\"icon-cog\"></i> **Settings** dialog.\n\n#### <i class=\"icon-upload\"></i> Update a publication\n\nAfter publishing, StackEdit will keep your document linked to that publication which makes it easy for you to update it. Once you have modified your document and you want to update your publication, click on the <i class=\"icon-upload\"></i> button in the navigation bar.\n\n> **Note:** The <i class=\"icon-upload\"></i> button is disabled when your document has not been published yet.\n\n#### <i class=\"icon-upload\"></i> Manage document publication\n\nSince one document can be published on multiple locations, you can list and manage publish locations by clicking <i class=\"icon-upload\"></i> **Manage publication** in the <i class=\"icon-provider-stackedit\"></i> menu panel. This will let you remove publication locations that are associated to your document.\n\n> **Note:** If the file has been removed from the website or the blog, the document will no longer be published on that location.\n\n----------\n\n\nMarkdown Extra\n--------------------\n\nStackEdit supports **Markdown Extra**, which extends **Markdown** syntax with some nice features.\n\n> **Tip:** You can disable any **Markdown Extra** feature in the **Extensions** tab of the <i class=\"icon-cog\"></i> **Settings** dialog.\n\n> **Note:** You can find more information about **Markdown** syntax [here][2] and **Markdown Extra** extension [here][3].\n\n\n### Tables\n\n**Markdown Extra** has a special syntax for tables:\n\nItem     | Value\n-------- | ---\nComputer | $1600\nPhone    | $12\nPipe     | $1\n\nYou can specify column alignment with one or two colons:\n\n| Item     | Value | Qty   |\n| :------- | ----: | :---: |\n| Computer | $1600 |  5    |\n| Phone    | $12   |  12   |\n| Pipe     | $1    |  234  |\n\n\n### Definition Lists\n\n**Markdown Extra** has a special syntax for definition lists too:\n\nTerm 1\nTerm 2\n:   Definition A\n:   Definition B\n\nTerm 3\n\n:   Definition C\n\n:   Definition D\n\n\t> part of definition D\n\n\n### Fenced code blocks\n\nGitHub's fenced code blocks are also supported with **Highlight.js** syntax highlighting:\n\n```\n// Foo\nvar bar = 0;\n```\n\n> **Tip:** To use **Prettify** instead of **Highlight.js**, just configure the **Markdown Extra** extension in the <i class=\"icon-cog\"></i> **Settings** dialog.\n\n> **Note:** You can find more information:\n\n> - about **Prettify** syntax highlighting [here][5],\n> - about **Highlight.js** syntax highlighting [here][6].\n\n\n### Footnotes\n\nYou can create footnotes like this[^footnote].\n\n  [^footnote]: Here is the *text* of the **footnote**.\n\n\n### SmartyPants\n\nSmartyPants converts ASCII punctuation characters into \"smart\" typographic punctuation HTML entities. For example:\n\n|                  | ASCII                        | HTML              |\n ----------------- | ---------------------------- | ------------------\n| Single backticks | `'Isn't this fun?'`            | 'Isn't this fun?' |\n| Quotes           | `\"Isn't this fun?\"`            | \"Isn't this fun?\" |\n| Dashes           | `-- is en-dash, --- is em-dash` | -- is en-dash, --- is em-dash |\n\n\n### Table of contents\n\nYou can insert a table of contents using the marker `[TOC]`:\n\n[TOC]\n\n\n### MathJax\n\nYou can render *LaTeX* mathematical expressions using **MathJax**, as on [math.stackexchange.com][1]:\n\nThe *Gamma function* satisfying $\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$ is via the Euler integral\n\n$$\n\\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt\\,.\n$$\n\n> **Tip:** To make sure mathematical expressions are rendered properly on your website, include **MathJax** into your template:\n\n```\n<script type=\"text/javascript\" src=\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML\"></script>\n```\n\n> **Note:** You can find more information about **LaTeX** mathematical expressions [here][4].\n\n\n### UML diagrams\n\nYou can also render sequence diagrams like this:\n\n```sequence\nAlice->Bob: Hello Bob, how are you?\nNote right of Bob: Bob thinks\nBob-->Alice: I am good thanks!\n```\n\nAnd flow charts like this:\n\n```flow\nst=>start: Start\ne=>end\nop=>operation: My Operation\ncond=>condition: Yes or No?\n\nst->op->cond\ncond(yes)->e\ncond(no)->op\n```\n\n> **Note:** You can find more information:\n\n> - about **Sequence diagrams** syntax [here][7],\n> - about **Flow charts** syntax [here][8].\n\n### Support StackEdit\n\n[![](https://cdn.monetizejs.com/resources/button-32.png)](https://monetizejs.com/authorize?client_id=ESTHdCYOi18iLhhO&summary=true)\n\n  [^stackedit]: [StackEdit](https://stackedit.io/) is a full-featured, open-source Markdown editor based on PageDown, the Markdown library used by Stack Overflow and the other Stack Exchange sites.\n\n\n  [1]: http://math.stackexchange.com/\n  [2]: http://daringfireball.net/projects/markdown/syntax \"Markdown\"\n  [3]: https://github.com/jmcmanus/pagedown-extra \"Pagedown Extra\"\n  [4]: http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\n  [5]: https://code.google.com/p/google-code-prettify/\n  [6]: http://highlightjs.org/\n  [7]: http://bramp.github.io/js-sequence-diagrams/\n  [8]: http://adrai.github.io/flowchart.js/\n","file.TO6PG4kQAXkj14SkLXYQikz8.discussionList":"{}","file.TO6PG4kQAXkj14SkLXYQikz8.editorEnd":"911","file.TO6PG4kQAXkj14SkLXYQikz8.editorScrollTop":"0","file.TO6PG4kQAXkj14SkLXYQikz8.editorStart":"911","file.TO6PG4kQAXkj14SkLXYQikz8.previewScrollTop":"72","file.TO6PG4kQAXkj14SkLXYQikz8.publish":";","file.TO6PG4kQAXkj14SkLXYQikz8.selectTime":"1427334316682","file.TO6PG4kQAXkj14SkLXYQikz8.sync":";","file.TO6PG4kQAXkj14SkLXYQikz8.title":"Hello!","file.YozuSmA5i5Dx3gVp0YBbnXm4.content":"# cloud-pushService 推送计算模块说明\n\n[TOC]\n\n## 业务需求\n详见：[云平台产品软件发布管理说明文档][1]\n\n* OA 发布推送通知\n\t* 固件发布\n\t* 固件召回\n\t* 插件发布\n\t* APP 发布\n* 终端推送信息到APP\n\t* deviceMessage\n\t* IPCamera 设备\n\n### 固件发布\n> 通知方式：共有4种方式，通知内容推送到路由器和管理APP。\n1. 进入路由器WEB管理界面弹出框提示（显示软件说明）：终端登录到路由器的WEB管理界面，主动弹出对话框显示软件说明。推送途径：由云服务器直接发给路由器。\n2. APP消息推送显示（显示通知内容）: 手机消息通知栏显示APP收到的通知内容。有2种推送途径：APP使用云账号登录，通知由云服务器直接发给APP；APP使用管理员密码登录，路由器收到通知之后再发给APP。\n3. APP连接到路由器时页面弹框（显示软件说明）: APP连接到某个路由器时，主动弹出对话框显示该通知内容。推送途径：由云服务器直接发给路由器。\n4. APP连接到路由器在实时消息模块显示:APP连接到某个路由器时，在状态页面的实时消息模块显示该通知内容。推送途径：由云服务器直接发给路由器。\n>\n通知的发送目标：\n1. 通知设备：指定设备型号+硬件版本+软件版本的设备进行通知，也可以不选择；\n2. 通知地区：选定部分地区的设备进行通知；\n3. 通知数量：针对一定数量的设备进行通知；  \n>\n具体的实现为：在同时符合通知设备和通知地区的设备范围内，抽取最近连接到云的指定数量发送通知。\n>\n例外情况：\n1. 同一软件无法进行多少次发布，对同一设备仅推送一次消息；\n2. 强制升级，消息推送成功，但设备没有升级成功，则需要重新推送消息。\n>\n局部发布时，预警机制:  \n设定更新量预警后，当云端达到指定更新量的设备连接时，触发预警策略，云端向指定邮箱发送预警邮件。邮件格式与模板见附件。\n\n\n### 插件发布\n> 通知发送的方式：共有4种方式，通知内容推送到路由器和管理APP。\n1. 进入路由器WEB管理界面弹出框提示（显示通知内容）：终端登录到路由器的WEB管理界面，主动弹出对话框显示通知内容。推送途径：由云服务器直接发给路由器。\n2. APP消息推送显示（显示通知内容）: 手机消息通知栏显示APP收到的通知内容。有2种推送途径：APP使用云账号登录，通知由云服务器直接发给APP；APP使用管理员密码登录，路由器收到通知之后再发给APP。\n3. APP连接到路由器时页面弹框（显示通知内容）: APP连接到某个路由器时，主动弹出对话框显示该通知内容。推送途径：由云服务器直接发给路由器。\n4. APP连接到路由器在实时消息模块显示:APP连接到某个路由器时，在状态页面的实时消息模块显示该通知内容。推送途径：由云服务器直接发给路由器。\n>\n通知的发送目标：\n1. 通知设备：指定设备型号+硬件版本+软件版本和已/未安装插件名称+插件版本的设备进行通知，也可以不选择；\n2. 通知地区：选定部分地区的设备进行通知；\n3. 通知数量：针对一定数量的设备进行通知；\n具体的实现为：在同时符合通知设备和通知地区的设备范围内，抽取最近连接到云的指定数量发送通知。\n>\n例外情况：\n1. 同一插件+版本无论进行多少次发布，对同一设备仅推送一次消息；\n2. 当研发处对应用插件与软件对应关系表进行更新时，云平台可以实现对应更新。\n>\n通知推送示例：  \n插件A 已有版本1.0、1.1、1.2 ，更新1.3  \n对于路由器而言存在以下：已安装1.0、已安装1.1、已安装1.2、未安装A；  \n推送通知可能存在情况：\n>\n局部发布时：  \n1. 只通知已安装某一个版本插件如：只通知已安装1.0;\n2. 只通知未安装A的用户：未安装A；\n3. 通知未安装A和已安装1.0的用户；\n>\n全局发布：  \n通知插件适用的所有的用户：包括：已安装1.0、已安装1.1、已安装1.2、未安装A\n\n### APP 发布\n> 通知发送的方式：共有2种方式，通知内容推送到管理APP。\n1. APP消息推送显示（显示通知内容）: 手机消息通知栏显示APP收到的通知内容。推送途径：APP使用云账号登录，通知由云服务器直接发给APP；\n2. APP启动时页面弹框提示（显示更新说明）：推送途径：通知由云服务器直接发给APP；\n通知的发送目标：\n3. 通知设备：同一个APP的所有历史版本（默认）；\n具体的实现为：在同时符合通知设备和通知地区的设备范围内，抽取最近连接到云的指定数量发送通知。\n>\n例外情况：\n1. 同一APP+版本无论进行多少次发布，对同一设备仅推送一次消息；\n2. 当研发处对APP发布单进行更新时，云平台可以实现对应更新。\n\n\n[1]:  \\\\file.tp-link.net\\云项目资料 \"云平台产品软件发布管理说明文档\"\n","file.YozuSmA5i5Dx3gVp0YBbnXm4.editorEnd":"1586","file.YozuSmA5i5Dx3gVp0YBbnXm4.editorScrollTop":"2200","file.YozuSmA5i5Dx3gVp0YBbnXm4.editorStart":"1586","file.YozuSmA5i5Dx3gVp0YBbnXm4.previewScrollTop":"2576","file.YozuSmA5i5Dx3gVp0YBbnXm4.publish":";","file.YozuSmA5i5Dx3gVp0YBbnXm4.selectTime":"1428651718370","file.YozuSmA5i5Dx3gVp0YBbnXm4.sync":";","file.YozuSmA5i5Dx3gVp0YBbnXm4.title":"cloud-pushservice 需求","file.ef326sX8VXuc5erOCWh2maPM.content":"# Refactor\n\n[重构-改善既有代码的设计]()\n\n开发软件时，我在做两件事情，添加性能和重构。\n\n何时重构？\n重构不应该特别拨出来时间做的事情，应该随时随地进行。不应该为重构而重构，之所以重构，是因为想做别的什么事，而重构可以帮助你把那些事做好。\n\n* 三次法则\n* 添加功能时重构\n* 修补错误时重构\n* 复审代码时重构\n   和整个团队做设计复审，和单个复审者做代码复审。\n* 随时\n\n重构原则：\n- \n","file.ef326sX8VXuc5erOCWh2maPM.editorEnd":"193","file.ef326sX8VXuc5erOCWh2maPM.editorScrollTop":"0","file.ef326sX8VXuc5erOCWh2maPM.editorStart":"193","file.ef326sX8VXuc5erOCWh2maPM.previewScrollTop":"73","file.ef326sX8VXuc5erOCWh2maPM.publish":";","file.ef326sX8VXuc5erOCWh2maPM.selectTime":"1428547662578","file.ef326sX8VXuc5erOCWh2maPM.sync":";","file.ef326sX8VXuc5erOCWh2maPM.title":"refactor","file.list":";file.TO6PG4kQAXkj14SkLXYQikz8;file.H1R4QOFHSkFNQnAK8RNjGClo;file.StACXbjkl5yGNyeGVp9xMFZ2;file.YozuSmA5i5Dx3gVp0YBbnXm4;file.tCZwhzFahsmtQ8uJ6mP5ZeSB;file.QlzvpqBX8GNbyYjeP8RraeCt;file.MMuf27Bgg7PqqolMLntpH7BF;file.nSuO7pbEFOaCNBkOr9QDVRFV;file.ef326sX8VXuc5erOCWh2maPM;","file.nSuO7pbEFOaCNBkOr9QDVRFV.content":"# openssl\n\n## pkcs12\n\n- [OpenSSL命令---pkcs12](http://blog.csdn.net/as3luyuan123/article/details/16105475)\n\npkcs12文件工具，能生成和分析pkcs12文件。PKCS#12文件可以被用于多个项目，例如包含Netscape、 MSIE 和 MS Outlook。\n\n```\nopenssl pkcs12 [-export] [-chain] [-inkey filename] [-certfile filename] [-CApath arg] [-CAfile arg]   \n[-name name] [-caname name] [-in filename] [-out filename] [-noout] [-nomacver] [-nocerts]   \n[-clcerts] [-cacerts] [-nokeys] [-info] [-noiter] [-maciter] [-nomaciter] [-nomac] [-twopass] [-descert]   \n[-certpbe alg] [-keypbe alg] [-macalg digest] [-keyex] [-keysig] [-password arg] [-passin arg] [-passout arg]   \n[-rand file(s)] [-LMK] [-CSP name][-engine e] [-des] [-des3] [-aes128] [-aes192] [-aes256] [-idea]   \n[-camellia128] [-camellia192] [-camellia256] [-nodes]  \n```\n\nPKCS#12文件在创建或分析的时候要依赖有一些选项。默认的是分析一个PKCS#12文件。一个PKCS#12文件可以用B<-export>选项来创建。\n\n分析选项：\n\n-in filename：指定私钥和证书读取的文件，默认为标准输入。必须为PEM格式。\n\n-out filename：指定输出的pkcs12文件，默认为标准输出。\n\n-password arg：指定导入导出口令来源。\n\n-passin arg：输入文件保护口令来源。\n\n-passout arg：指定所有输出私钥保护口令来源。\n\n-noout：不打印参数编码的版本信息。\n\n-clcerts：仅仅输出客户端证书，不输出CA证书。\n\n-cacerts：仅仅输出CA证书，不输出客户端证书。\n\n-nocerts：不输出任何证书。\n\n-nokeys：不输出任何私钥信息值。\n\n-info：输出PKCS#12文件结构的附加信息值。例如用的算法信息以及迭代次数。\n\n-des：在输出之前用DES算法加密私钥值。\n\n-des3：在输出之前用3DES算法加密私钥值。此项为默认。\n\n-idea：在输出之前用IDEA算法加密私钥值。\n\n-aes128、-aes192、-aes256：在输出之前用AES算法加密私钥值。\n\n-camellia128、-camellia192、-camellia256：在输出之前用camellia算法加密私钥值。\n\n-nodes：一直对私钥不加密。\n\n-nomacver：读取文件时不验证MAC值的完整性。\n\n-twopass：需要用户分别指定MAC口令和加密口令。\n\n文件创建选项：\n\n-export：这个选项指定了一个PKCS#12文件将会被创建。\n\n-in filename：指定私钥和证书读取的文件，默认为标准输入。必须为PEM格式。\n\n-out filename：指定输出的pkcs12文件，默认为标准输出。\n\n-inkey filename：指定私钥文件的位置。如果没有被指定，私钥必须在-in filename中指定。\n\n-name name：指定证书以及私钥的友好名字。当用软件导入这个文件时，这个名字将被显示出来。\n\n-certfilefilename：添加filename中所有的证书信息值。\n\n-caname name：指定其它证书的友好名字。这个选项可以被用于多次。\n\n-password arg：指定导入导出口令来源。\n\n-passin arg：输入文件保护口令来源。\n\n-passout arg：指定所有输出私钥保护口令来源。\n\n-chain：如果这个选项被提出，则添加用户证书的证书链。标准CA中心用它来搜索。如果搜索失败，则是一个重大的错误。\n\n-descert：用3DES对PKCS12进行加密，这样杨浦可能会导致PKCS12文件被一些“export grade”软件不能够读取。默认的是用3DES对私钥文件进行加密，用40位的RC2对证书公钥文件进行加密。\n\n-certpbealg：该选项允许指定证书的加密算法。任何PKCS#5 v1.5或 PKCS#12 PBE类型的算法都可以被使用。默认使用的是40位的RC2。\n\n-keypbe alg：该选项允许指定证书私钥的加密算法。任何PKCS#5 v1.5或 PKCS#12 PBE类型的算法都可以被使用。默认使用的是3DES。\n\n-keyex：设置私钥仅仅被用于密钥交换。\n\n-keysig：设置私钥仅仅被用于数字签名。\n\n-macalg digest：指定MAC摘要算法。如果没有被指定，则默认使用sha1。\n\n-nomaciter、-noiter：这个选项影响MAC值和密钥算法的迭代次数。除非你希望产生的文件能与MSIE 4.0相兼容，可以把这两个选项丢弃一边。\n\n-maciter：加强完整性保护，多次计算MAC。\n\n-nomac：不去规定MAC值的完整性。\n\n-rand file(s)：指定随机数种子文件，多个文件间用分隔符分开，windows用“;”，OpenVMS用“,“，其他系统用“：”。\n\n-CApatharg：指定CA目录。该目录必须是一个标准证书目录：每个CA文件的文件名为XXXX.0，XXXX为其持有者摘要值。\n\n-CAfile arg：指定CA文件。\n\n -LMK：添加本地的机械属性到私钥中。\n\n-CSP name：微软的CSP的名字。\n\n-engine id：指定硬件引擎。\n\n注意：\n\n有一大部分选项将不会使用。对PKCS#12文件来说，仅仅B<-in>和 B<-out>需要被使用。对文件创建来说，B<-export>和 B<-name>使用。\n\n如果B<-clcerts>、B<-cacerts>或 B<-nocerts>没有存在，所有的证书将会被依附到PKCS#12文件将会被输出。没有保证的是提出的第一个证书不一定匹配私钥。某些软件需要一个私钥和证书，来承担在文件中的第一个证书匹配私钥：经常没有这种情况。用B<-clcerts>选项能够解决问题，因为这个选项要输出与私钥文件相匹配的证书。如果CA证书是必需的，用B<-nokeys -cacerts>选项来输出文件，仅仅输出CA证书。\n\nB<-keypbe> 和 B<-certpbe>算法允许明确的私钥加密算法和证书的详细说明。通常的默认是好的，但是偶尔的软件不能够处理经过3DES加密了的私钥。选项B<-keypbe PBE-SHA1-RC2-40>可以被用于减少40字节的RC2私钥加密。一个完整的所有算法的描述包含在B<pkcs8>手册中。\n\n实例：\n\n分析一个PKCS#12文件和输出到文件中：\n`openssl pkcs12 -in file.p12 -out file.pem`\n\n仅仅输出客户端证书到文件中：\n`openssl pkcs12 -in file.p12 -clcerts -out file.pem`  \n\n不加密私钥文件：\n`openssl pkcs12 -in file.p12 -out file.pem -nodes`\n\n打印PKCS#12格式的信息值：\n`openssl pkcs12 -in file.p12 -info -noout`\n\n生成pkcs12文件，但不包含CA证书：\n`openssl pkcs12 -export -inkey ocspserverkey.pem -in ocspservercert.pem  -out ocspserverpkcs12.pfx`\n\n生成pcs12文件，包含CA证书：\n`openssl pkcs12 -export -inkey ocspserverkey.pem -in ocspservercert.pem -CAfile demoCA/cacert.pem -chain -out ocsp1.pfx`\n\n将pcks12中的信息分离出来，写入文件：\n`openssl pkcs12 –in ocsp1.pfx -out certandkey.pem`\n\n显示pkcs12信息：\n`openssl pkcs12 –in ocsp1.pfx -info`\n\nBUGS：\n\n有一些争论是PKCS#12的标准是一个大的BUG。\n\nOpenSSL 0.9.6a以前的版本在PKCS#12的产生过程中有一个bug。在稀有的情况下用一个无效的密钥来加密并产生PKCS#12文件。这样做的结果是一些PKCS#12文件被其它的应用程序（MSIE或Netscape）会触发这个bug。因为他们不会被OpenSSL或相似的OpenSSL在产生PKCS#12文件时不能够被加密。产生的通道相当的小：在256中比1还小。\n\n一方面这个Bug的固定影响是老的无效的加密了的PKCS#12文件不能够被固定的版本所分析。在这种情况下，B<pkcs12>会报告’ the MAC is OK but fail with a decryption error when extracting private keys’错误。\n\n这个问题的解决方法是用老的OpenSSL版本从PKCS#12中来提起私钥文件和证书，用新的版本、提取到的证书、私钥来重新创建PKCS#12文件。例如：\n`old-openssl -in bad.p12 -out keycerts.pem`","file.nSuO7pbEFOaCNBkOr9QDVRFV.editorEnd":"278","file.nSuO7pbEFOaCNBkOr9QDVRFV.editorScrollTop":"400","file.nSuO7pbEFOaCNBkOr9QDVRFV.editorStart":"278","file.nSuO7pbEFOaCNBkOr9QDVRFV.previewScrollTop":"75","file.nSuO7pbEFOaCNBkOr9QDVRFV.publish":";","file.nSuO7pbEFOaCNBkOr9QDVRFV.selectTime":"1427941190280","file.nSuO7pbEFOaCNBkOr9QDVRFV.sync":";","file.nSuO7pbEFOaCNBkOr9QDVRFV.title":"openssl","file.tCZwhzFahsmtQ8uJ6mP5ZeSB.content":"# Zookeeper 学习\n\nZookeeper 从设计模式角度来看，是一个基于观察者模式设计的分布式服务管理框架，它负责存储和管理大家都关心的数据，然后接受观察者的注册，一旦这些数据的状态发生变化，Zookeeper 就将负责通知已经在 Zookeeper 上注册的那些观察者做出相应的反应，从而实现集群中类似 Master/Slave 管理模式。\n\n* 统一命名服务（Name Service）\n*  配置管理（Configuration Management）\n* 集群管理（Group Membership）\n* 共享锁（Locks）\n* 队列管理\n\n\nref:\n* [Zookeeper apache doc](http://zookeeper.apache.org/doc/current/zookeeperOver.html)\n* [Zookeeper 初体验之——JAVA API 初探](http://www.cnblogs.com/haippy/archive/2012/07/19/2600032.html)\n\n\n## zk watch \n\n\n> [ZooKeeper Watches](http://zookeeper.apache.org/doc/current/zookeeperProgrammers.html#ch_zkWatches)\nAll of the read operations in ZooKeeper - getData(), getChildren(), and exists() - have the option of setting a watch as a side effect. Here is ZooKeeper's definition of a watch: a watch event is one-time trigger, sent to the client that set the watch, which occurs when the data for which the watch was set changes. There are three key points to consider in this definition of a watch:\n>\n- One-time trigger\nOne watch event will be sent to the client when the data has changed. For example, if a client does a getData(\"/znode1\", true) and later the data for /znode1 is changed or deleted, the client will get a watch event for /znode1. If /znode1 changes again, no watch event will be sent unless the client has done another read that sets a new watch.\n- Sent to the client\nThis implies that an event is on the way to the client, but may not reach the client before the successful return code to the change operation reaches the client that initiated the change. Watches are sent asynchronously to watchers. ZooKeeper provides an ordering guarantee: a client will never see a change for which it has set a watch until it first sees the watch event. Network delays or other factors may cause different clients to see watches and return codes from updates at different times. The key point is that everything seen by the different clients will have a consistent order.\n- The data for which the watch was set\nThis refers to the different ways a node can change. It helps to think of ZooKeeper as maintaining two lists of watches: data watches and child watches. getData() and exists() set data watches. getChildren() sets child watches. Alternatively, it may help to think of watches being set according to the kind of data returned. getData() and exists() return information about the data of the node, whereas getChildren() returns a list of children. Thus, setData() will trigger data watches for the znode being set (assuming the set is successful). A successful create() will trigger a data watch for the znode being created and a child watch for the parent znode. A successful delete() will trigger both a data watch and a child watch (since there can be no more children) for a znode being deleted as well as a child watch for the parent znode.\n>\nWatches are maintained locally at the ZooKeeper server to which the client is connected. This allows watches to be light weight to set, maintain, and dispatch. When a client connects to a new server, the watch will be triggered for any session events. Watches will not be received while disconnected from a server. When a client reconnects, any previously registered watches will be reregistered and triggered if needed. In general this all occurs transparently. There is one case where a watch may be missed: a watch for the existance of a znode not yet created will be missed if the znode is created and deleted while disconnected.\n>\nWhat ZooKeeper Guarantees about Watches\nWith regard to watches, ZooKeeper maintains these guarantees:\n>\nWatches are ordered with respect to other events, other watches, and asynchronous replies. The ZooKeeper client libraries ensures that everything is dispatched in order.\nA client will see a watch event for a znode it is watching before seeing the new data that corresponds to that znode.\nThe order of watch events from ZooKeeper corresponds to the order of the updates as seen by the ZooKeeper service.\nThings to Remember about Watches\nWatches are one time triggers; if you get a watch event and you want to get notified of future changes, you must set another watch.\nBecause watches are one time triggers and there is latency between getting the event and sending a new request to get a watch you cannot reliably see every change that happens to a node in ZooKeeper. Be prepared to handle the case where the znode changes multiple times between getting the event and setting the watch again. (You may not care, but at least realize it may happen.)\nA watch object, or function/context pair, will only be triggered once for a given notification. For example, if the same watch object is registered for an exists and a getData call for the same file and that file is then deleted, the watch object would only be invoked once with the deletion notification for the file.\nWhen you disconnect from a server (for example, when the server fails), you will not get any watches until the connection is reestablished. For this reason session events are sent to all outstanding watch handlers. Use session events to go into a safe mode: you will not be receiving events while disconnected, so your process should act conservatively in that mode.\n","file.tCZwhzFahsmtQ8uJ6mP5ZeSB.editorEnd":"5212","file.tCZwhzFahsmtQ8uJ6mP5ZeSB.editorScrollTop":"2293","file.tCZwhzFahsmtQ8uJ6mP5ZeSB.editorStart":"5212","file.tCZwhzFahsmtQ8uJ6mP5ZeSB.previewScrollTop":"1474","file.tCZwhzFahsmtQ8uJ6mP5ZeSB.publish":";","file.tCZwhzFahsmtQ8uJ6mP5ZeSB.selectTime":"1427870364688","file.tCZwhzFahsmtQ8uJ6mP5ZeSB.sync":";","file.tCZwhzFahsmtQ8uJ6mP5ZeSB.title":"zookeeper","folder.list":";","frontWindowId":"l8TtCfDLfNMnZCqu03HQwxDH","gist.publishPreferences":"{\"gist-public\":true,\"format\":\"markdown\"}","settings":"{\"layoutOrientation\":\"horizontal\",\"editMode\":\"ltr\",\"lazyRendering\":true,\"editorFontClass\":\"font-rich\",\"fontSizeRatio\":1,\"maxWidthRatio\":1,\"cursorFocusRatio\":0.5,\"defaultContent\":\"\\n\\n\\n> Written with [StackEdit](https://stackedit.io/).\",\"commitMsg\":\"Published with https://stackedit.io/\",\"conflictMode\":\"merge\",\"markdownMimeType\":\"text/plain\",\"gdriveMultiAccount\":1,\"gdriveFullAccess\":true,\"dropboxFullAccess\":true,\"githubFullAccess\":true,\"template\":\"<!DOCTYPE html>\\n<html>\\n<head>\\n<meta charset=\\\"utf-8\\\">\\n<meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n<title><%= documentTitle %></title>\\n<link rel=\\\"stylesheet\\\" href=\\\"https://stackedit.io/res-min/themes/base.css\\\" />\\n<script type=\\\"text/javascript\\\" src=\\\"https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML\\\"></script>\\n</head>\\n<body><div class=\\\"container\\\"><%= documentHTML %></div></body>\\n</html>\",\"pdfTemplate\":\"<!DOCTYPE html>\\n<html>\\n<head>\\n<meta charset=\\\"utf-8\\\">\\n<title><%= documentTitle %></title>\\n<link rel=\\\"stylesheet\\\" href=\\\"http://localhost/res-min/themes/base.css\\\" />\\n<script type=\\\"text/x-mathjax-config\\\">\\nMathJax.Hub.Config({ messageStyle: \\\"none\\\" });\\n</script>\\n<script type=\\\"text/javascript\\\" src=\\\"http://localhost/res/bower-libs/MathJax/MathJax.js?config=TeX-AMS_HTML\\\"></script>\\n</head>\\n<body><%= documentHTML %></body>\\n</html>\",\"pdfOptions\":\"{\\n    \\\"marginTop\\\": 25,\\n    \\\"marginRight\\\": 25,\\n    \\\"marginBottom\\\": 25,\\n    \\\"marginLeft\\\": 25,\\n    \\\"pageSize\\\": \\\"A4\\\"\\n}\",\"couchdbUrl\":\"https://stackedit.smileupps.com/documents\",\"extensionSettings\":{\"yamlFrontMatterParser\":{},\"markdownSectionParser\":{},\"partialRendering\":{\"enabled\":true},\"buttonMarkdownSyntax\":{\"enabled\":true},\"googleAnalytics\":{\"enabled\":true},\"twitter\":{},\"dialogAbout\":{},\"dialogManagePublication\":{},\"dialogManageSynchronization\":{},\"dialogManageSharing\":{},\"dialogOpenHarddrive\":{},\"documentTitle\":{},\"documentSelector\":{\"orderBy\":\"mru\",\"shortcutPrevious\":\"Ctrl+[\",\"shortcutNext\":\"Ctrl+]\",\"enabled\":true},\"documentPanel\":{},\"documentManager\":{},\"workingIndicator\":{},\"notifications\":{\"timeout\":8000,\"enabled\":true},\"umlDiagrams\":{\"flowchartOptions\":\"{\\n   \\\"line-width\\\": 2,\\n   \\\"font-family\\\": \\\"sans-serif\\\",\\n   \\\"font-weight\\\": \\\"normal\\\"\\n}\",\"enabled\":true},\"markdownExtra\":{\"extensions\":[\"fenced_code_gfm\",\"tables\",\"def_list\",\"attr_list\",\"footnotes\",\"smartypants\",\"strikethrough\",\"newlines\"],\"intraword\":true,\"comments\":true,\"highlighter\":\"highlight\",\"enabled\":true},\"toc\":{\"marker\":\"\\\\[(TOC|toc)\\\\]\",\"maxDepth\":6,\"button\":true,\"enabled\":true},\"mathJax\":{\"tex\":\"{}\",\"tex2jax\":\"{ inlineMath: [[\\\"$\\\",\\\"$\\\"],[\\\"\\\\\\\\\\\\\\\\(\\\",\\\"\\\\\\\\\\\\\\\\)\\\"]], displayMath: [[\\\"$$\\\",\\\"$$\\\"],[\\\"\\\\\\\\[\\\",\\\"\\\\\\\\]\\\"]], processEscapes: true }\",\"enabled\":true},\"emailConverter\":{\"enabled\":true},\"scrollSync\":{\"enabled\":true},\"buttonSync\":{\"syncPeriod\":180000,\"syncShortcut\":\"mod+s\",\"enabled\":true},\"buttonPublish\":{},\"buttonStat\":{\"name1\":\"Characters\",\"value1\":\"\\\\S\",\"name2\":\"Words\",\"value2\":\"\\\\S+\",\"name3\":\"Paragraphs\",\"value3\":\"\\\\S.*\",\"enabled\":true},\"buttonHtmlCode\":{\"template\":\"<%= documentHTML %>\",\"enabled\":true},\"buttonViewer\":{\"enabled\":true},\"welcomeTour\":{},\"shortcuts\":{\"mapping\":\"{\\n    'mod+b': bindPagedownButton('bold'),\\n    'mod+i': bindPagedownButton('italic'),\\n    'mod+l': bindPagedownButton('link'),\\n    'mod+q': bindPagedownButton('quote'),\\n    'mod+k': bindPagedownButton('code'),\\n    'mod+g': bindPagedownButton('image'),\\n    'mod+o': bindPagedownButton('olist'),\\n    'mod+u': bindPagedownButton('ulist'),\\n    'mod+h': bindPagedownButton('heading'),\\n    'mod+r': bindPagedownButton('hr'),\\n    'mod+z': bindPagedownButton('undo'),\\n    'mod+y': bindPagedownButton('redo'),\\n    'mod+shift+z': bindPagedownButton('redo'),\\n    'mod+m': function(evt) {\\n        $('.button-open-discussion').click();\\n        evt.preventDefault();\\n    },\\n    '= = > space': function() {\\n        expand('==> ', '⇒ ');\\n    },\\n    '< = = space': function() {\\n        expand('<== ', '⇐ ');\\n    },\\n    'S t a c k E d i t': function() {\\n        eventMgr.onMessage(\\\"You are stunned!!! Aren't you?\\\");\\n    }\\n}\\n\",\"enabled\":true,\"code\":\"{\\n    'mod+b': bindPagedownButton('bold'),\\n    'mod+i': bindPagedownButton('italic'),\\n    'mod+l': bindPagedownButton('link'),\\n    'mod+q': bindPagedownButton('quote'),\\n    'mod+k': bindPagedownButton('code'),\\n    'mod+g': bindPagedownButton('image'),\\n    'mod+o': bindPagedownButton('olist'),\\n    'mod+u': bindPagedownButton('ulist'),\\n    'mod+h': bindPagedownButton('heading'),\\n    'mod+r': bindPagedownButton('hr'),\\n    'mod+z': bindPagedownButton('undo'),\\n    'mod+y': bindPagedownButton('redo'),\\n    'mod+shift+z': bindPagedownButton('redo'),\\n    'mod+m': function(evt) {\\n        $('.button-open-discussion').click();\\n        evt.preventDefault();\\n    },\\n    '= = > space': function() {\\n        expand('==> ', '⇒ ');\\n    },\\n    '< = = space': function() {\\n        expand('<== ', '⇐ ');\\n    },\\n    'S t a c k E d i t': function() {\\n        eventMgr.onMessage(\\\"You are stunned!!! Aren't you?\\\");\\n    }\\n}\\n\"},\"userCustom\":{\"code\":\"\",\"enabled\":true},\"comments\":{},\"findReplace\":{\"findReplaceShortcut\":\"mod+f\",\"enabled\":true},\"htmlSanitizer\":{\"enabled\":true}}}","themeV4":"default","version":"v23","welcomeTour":"done"}